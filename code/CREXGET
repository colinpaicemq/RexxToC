
#include <SHVBLOCK>
#include <IRXEXTE>
#include <IRXENVB>
#include <EVALBLOC>
#include <REXPARMS>
int CRexxGet(ENVBLOCK *pEnv,char * pSymbol,char * pArea, int * length){
  char dummy;
  OSFUNC * fptr;
  SHVBLOCK  shv;
  memset(&shv,0,sizeof(shv));
  shv.  SHVCODE = SHVSYFET; //   symbolic name fetch
  shv.  SHVNAMA =  pSymbol; // a symbolic name
  shv.  SHVNAML =  strlen(pSymbol); // Len symbolic name
  shv. SHVVALA  = pArea;
  shv. SHVBUFL = * length;
  shv. SHVVALL =  0 ;
  int rc,rc3;
  fptr  =  pEnv-> ENVBLOCK_IRXEXTE -> IRXEXCOM;
  rc = (*fptr)("IRXEXCOM",
               &dummy,
               &dummy,
               &shv,
               0   , // indicate envblock not used
               rc3);
  int l =  shv.SHVVALL;  // returned length
  int rc2 =  shv.SHVRET;
  if ( rc != 0)
  printf("CREXGET IRXEXCOM rc %i rc3 %i shnvrc %i\n",rc,rc3,rc2);
  if (rc2        != 0)
     return   rc2       ;
  if (rc != 0)
     return rc;
  if (l > *length)             // value too long
  {
    printf("CREXGET Value length %i buf size %i\n",shv.SHVVALL,*length);
    return 16;
  }
  pArea[l] = 0x00;
  * length = l;
//printHex(stdout,&shv,sizeof(shv));
   return  0;
}
